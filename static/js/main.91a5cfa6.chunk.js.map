{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","signInWithPopup","GoogleAuthProvider","GithubAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","currentUser","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91a5cfa6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\n// import firebase auth\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  // event: 무슨 일이 발생했는가\n  const onChange = event => {\n    // target 안에 name과 value가 있고\n    // value: 키보드로 입력한 내용\n    // input의 value는 state에 저장\n    const {\n      target: { name, value }\n    } = event;\n    // console.log(value)\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  // form 제출에 대해서 preventDefault\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        // log in\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from \"components/AuthForm\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"../fbase\";\n\nconst Auth = () => {\n  const onSocialClick = async event => {\n    const {\n      target: { name }\n    } = event;\n    if (name === \"google\") {\n      await authService.signInWithPopup(\n        new firebaseInstance.auth.GoogleAuthProvider()\n      );\n    } else if (name === \"github\") {\n      await authService.signInWithPopup(\n        new firebaseInstance.auth.GithubAuthProvider()\n      );\n    }\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    // console.log(ok);\n    if (ok) {\n      // delete nweet\n      // doc 안에 collection(nweets)을 써주고 nweetObj.id로 써준다\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing(prev => !prev);\n  const onSubmit = async event => {\n    event.preventDefault();\n    // console.log(nweetObj, newNweet);\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet\n    });\n    setEditing(false);\n  };\n  const onChange = event => {\n    const {\n      target: { value }\n    } = event;\n    setNewNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your nweet\"\n                  value={newNweet}\n                  required\n                  autoFocus\n                  onChange={onChange}\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <>\n              <div className=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async event => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      createorId: userObj.uid,\n      attachmentUrl // attachmentUrl이 없을 경우, \"\"\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = event => {\n    const {\n      target: { value }\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = event => {\n    // console.log(event.target.files);\n    const {\n      target: { files }\n    } = event;\n    const theFile = files[0];\n    // console.log(theFile);\n    const reader = new FileReader();\n    reader.onloadend = finishedEvent => {\n      // console.log(finishedEvent);\n      const {\n        currentTarget: { result }\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{ opacity: 0 }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} style={{ backgroundImage: attachment }} />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      // less rerender\n      // console.log(nweetArray);\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map(nweet => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.createorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        {/* <Link to=\"/profile\">{userObj.displayName}'s My Profile</Link> */}\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(\"\");\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  //   const getMyNweets = async () => {\n  //     const nweets = await dbService\n  //       .collection(\"nweets\")\n  //       .where(\"createorId\", \"==\", userObj.uid)\n  //       .orderBy(\"createdAt\")\n  //       .get();\n  //     console.log(nweets.docs.map(doc => doc.data()));\n  //   };\n  //   useEffect(() => {\n  //     getMyNweets();\n  //   }, []);\n  const onChange = event => {\n    const {\n      target: { value }\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      // console.log(userObj.updateProfile);\n      await userObj.updateProfile({\n        displayName: newDisplayName\n      });\n      refreshUser(); // react.js에 있는 profile 새로고침\n    }\n  };\n  return (\n    <>\n      <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n          <input\n            onChange={onChange}\n            type=\"text\"\n            autoFocus\n            placeholder=\"Display name\"\n            value={newDisplayName}\n            className=\"formInput\"\n          />\n          <input\n            type=\"submit\"\n            value=\"Update Profile\"\n            className=\"formBtn\"\n            style={{ marginTop: 10 }}\n          />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n          Log Out\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\"\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // 유저의 로그인 여부 확인\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  // console.log(authService.currentUser);\n  // setInterval(() => {\n  //   console.log(authService.currentUser);\n  // }, 2000);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    // 유저상태에 변화가 있을 때 알아차리게 함\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: args => user.updateProfile(args)\n        });\n      } else {\n        setUserObj(null);\n      }\n      // 만약 init이 false이라면 router를 숨김\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    // console.log(authService.currentUser.displayName); ==> 덩치가 매우 큼\n    // setUserObj(authService.currentUser);\n    // setUserObj({ displayName: \"BS\" });\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: args => user.updateProfile(args)\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      {/* <footer>&copy; Nwitter {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}